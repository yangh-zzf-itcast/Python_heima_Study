from django.shortcuts import render
from django.template import loader, RequestContext
from django.http import HttpResponse
from booktest.models import BookInfo

# Create your views here.

def my_render(request, templates_path, context={}):
    # 1.加载模板文件,获取一个模板对象
    temp = loader.get_template(templates_path)

    # 2.定义模板上下文，给模板文件传数据
    context = RequestContext(request, context)

    # 3.模板渲染，产生一个替换后的html内容
    res_html = temp.render(context)

    # 4.返回应答
    return HttpResponse(res_html)


def index(request):
    # return my_render(request, 'booktest/index.html')
    return render(request, 'booktest/index.html')

def index2(request):
    """模板文件的加载顺序"""
    return render(request, 'booktest/index2.html')

# 模板变量
# /temp_var
def temp_var(request):
    """模板变量"""
    my_dict = {
            'title':'字典键值'
            }
    my_list = [1, 2, 3]

    book = BookInfo.objects.get(id=1)

    # 定义模板上下文
    context = {
            'my_dict': my_dict,
            'my_list': my_list,
            'book': book
            }

    return render(request, 'booktest/temp_var.html', context)

# 模板标签
# /temp_tags
def temp_tags(request):
    """模板标签"""
    books = BookInfo.objects.all()
    return render(request, 'booktest/temp_tags.html',{
        'books':books
        })

# 模板过滤器
# /temp_filter
def temp_filter(request):
    """模板过滤器"""
    books = BookInfo.objects.all()
    return render(request, 'booktest/temp_filter.html',{
        'books':books
        })

# /temp_inherit
def temp_inherit(request):
    """模板继承"""
    return render(request, 'booktest/child.html')

# /html_escape
def html_escape(request):
    """html转义"""
    return render(request, 'booktest/html_escape.html', {
        'content':'<h1>hello</h1>'
        })
